// Copyright (c) 2020 Pryaxis & Orion Contributors
// 
// This file is part of Orion.
// 
// Orion is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Orion is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Orion.  If not, see <https://www.gnu.org/licenses/>.

using System;
using System.Collections.Generic;
using Orion.Core.Packets.Items;
using Orion.Core.Packets.Misc;
using Orion.Core.Packets.Npcs;
using Orion.Core.Packets.Players;
using Orion.Core.Packets.Projectiles;
using Orion.Core.Packets.Server;
using Orion.Core.Packets.World;
using Orion.Core.Packets.World.TileEntities;
using Orion.Core.Packets.World.Tiles;

namespace Orion.Core.Packets
{
    /// <summary>
    /// Specifies a packet ID.
    /// </summary>
    public enum PacketId : byte
    {
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
        ClientConnect = 1,
        ClientDisconnect = 2,
        ClientIndex = 3,
        PlayerCharacter = 4,
        PlayerInventory = 5,
        PlayerJoin = 6,
        WorldInfo = 7,
        SectionRequest = 8,
        ClientStatus = 9,
        SectionInfo = 10,
        SectionFrames = 11,
        PlayerSpawn = 12,
        PlayerInfo = 13,
        PlayerActive = 14,
        PlayerHealth = 16,
        TileModify = 17,
        WorldTime = 18,
        DoorToggle = 19,
        TileSquare = 20,
        ItemInfo = 21,
        ItemOwn = 22,
        NpcInfo = 23,
        ProjectileInfo = 27,
        NpcDamage = 28,
        ProjectileRemove = 29,
        PlayerPvp = 30,
        ChestOpen = 31,
        ChestInventory = 32,
        ChestInfo = 33,
        ChestModify = 34,
        PlayerHealthEffect = 35,
        PlayerZones = 36,
        PasswordRequest = 37,
        PasswordResponse = 38,
        ItemDisown = 39,
        PlayerTownNpc = 40,
        PlayerAnimation = 41,
        PlayerMana = 42,
        PlayerManaEffect = 43,
        PlayerTeam = 45,
        SignRead = 46,
        SignInfo = 47,
        TileLiquid = 48,
        PlayerEnter = 49,
        PlayerBuffs = 50,
        EntityEffect = 51,
        ObjectUnlock = 52,
        NpcAddBuff = 53,
        NpcBuffs = 54,
        PlayerAddBuff = 55,
        NpcName = 56,
        WorldBiomes = 57,
        PlayerMusic = 58,
        WireActivate = 59,
        NpcHome = 60,
        WorldSummon = 61,
        PlayerDodge = 62,
        BlockPaint = 63,
        WallPaint = 64,
        EntityTeleport = 65,
        PlayerHeal = 66,
        ClientUuid = 68,
        ChestName = 69,
        NpcCatch = 70,
        NpcRelease = 71,
        NpcMerchant = 72,
        PlayerTeleportItem = 73,
        AnglerQuestInfo = 74,
        AnglerQuestComplete = 75,
        PlayerAnglerQuests = 76,
        TileAnimation = 77,
        InvasionProgress = 78,
        ObjectPlace = 79,
        PlayerChest = 80,
        CombatNumber = 81,
        Module = 82,
        NpcIdKillCount = 83,
        PlayerStealth = 84,
        PlayerQuickStack = 85,
        TileEntityInfo = 86,
        TileEntityPlace = 87,
        ItemTweak = 88,
        ItemFrameInfo = 89,
        InstancedItemInfo = 90,
        NpcEmote = 91,
        NpcStealCoins = 92,
        ProjectileRemoveIndex = 95,
        PlayerPortal = 96,
        NpcIdKilled = 97,
        EventOccurred = 98,
        MinionPosition = 99,
        NpcPortal = 100,
        PillarShieldStrengths = 101,
        PlayerNebulaBuff = 102,
        MoonLordInfo = 103,
        NpcShopInventory = 104,
        GemLockToggle = 105,
        PoofOfSmoke = 106,
        ServerMessage = 107,
        ProjectileCannon = 108,
        WireOperationsRequest = 109,
        WireOperationsResponse = 110,
        PartyToggle = 111,
        AmbientEffect = 112,
        OldOnesArmyStart = 113,
        OldOnesArmyEnd = 114,
        MinionTarget = 115,
        OldOnesArmyInfo = 116,
        PlayerHurt = 117,
        PlayerKill = 118,
        CombatText = 119,
        PlayerEmoji = 120,
        MannequinInventory = 121,
        TileEntityInteraction = 122,
        WeaponRackInfo = 123,
        HatRackInventory = 124,
        BlockBreaking = 125,
        NpcRevengeInfo = 126,
        NpcRemoveRevenge = 127,
        GolfBall = 128,
        ServerConnected = 129,
        NpcFish = 130,
        NpcImmunity = 131,
        ServerSound = 132,
        PlateInfo = 133,
        PlayerLuck = 134,
        PlayerDead = 135,
        NpcCavernMonsters = 136,
        NpcRemoveBuff = 137,
        PlayerHost = 139,
        CreditsRoll = 140,
        LucyAxePopup = 141,
        ProjectileSyncTrackers = 142,
        OldOnesArmyRequestSkip = 143,
        NpcQuestEffect = 144,
        ShimmerItemInfo = 145,
        Shimmer = 146,
        PlayerLoadout = 147,
        NpcImmunityItemInfo = 148,
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member
    }

    /// <summary>
    /// Provides extensions for the <see cref="PacketId"/> enumeration.
    /// </summary>
    public static class PacketIdExtensions
    {
        private static readonly Dictionary<PacketId, Type> _types = new Dictionary<PacketId, Type>
        {
            [PacketId.ClientConnect] = typeof(ClientConnect),
            [PacketId.ClientDisconnect] = typeof(ClientDisconnect),
            [PacketId.ClientIndex] = typeof(ClientIndex),
            [PacketId.PlayerCharacter] = typeof(PlayerCharacter),
            [PacketId.PlayerInventory] = typeof(PlayerInventory),
            [PacketId.PlayerJoin] = typeof(PlayerJoin),
            [PacketId.WorldInfo] = typeof(WorldInfo),
            [PacketId.ClientStatus] = typeof(ClientStatus),
            [PacketId.SectionRequest] = typeof(SectionRequest),
            //[PacketId.SectionInfo] = typeof(SectionInfo),
            [PacketId.SectionFrames] = typeof(SectionFrames),
            [PacketId.PlayerSpawn] = typeof(PlayerSpawn),
            [PacketId.PlayerInfo] = typeof(PlayerInfo),
            [PacketId.PlayerActive] = typeof(PlayerActive),
            [PacketId.PlayerHealth] = typeof(PlayerHealth),
            [PacketId.TileModify] = typeof(TileModify),
            [PacketId.TileSquare] = typeof(TileSquare),
            [PacketId.WorldTime] = typeof(WorldTime),
            [PacketId.DoorToggle] = typeof(DoorToggle),
            [PacketId.ItemInfo] = typeof(ItemInfo),
            [PacketId.ItemOwn] = typeof(ItemOwn),
            [PacketId.NpcInfo] = typeof(NpcInfo),
            [PacketId.ProjectileInfo] = typeof(ProjectileInfo),
            [PacketId.PlayerMana] = typeof(PlayerMana),
            [PacketId.PlayerManaEffect] = typeof(PlayerManaEffect),
            [PacketId.NpcDamage] = typeof(NpcDamage),
            [PacketId.ProjectileRemove] = typeof(ProjectileRemove),
            [PacketId.PlayerPvp] = typeof(PlayerPvp),
            [PacketId.ChestOpen] = typeof(ChestOpen),
            [PacketId.ChestInventory] = typeof(ChestInventory),
            [PacketId.ChestInfo] = typeof(ChestInfo),
            [PacketId.ChestModify] = typeof(ChestModify),
            [PacketId.PlayerHealthEffect] = typeof(PlayerHealthEffect),
            [PacketId.PlayerZones] = typeof(PlayerZones),
            [PacketId.PasswordRequest] = typeof(PasswordRequest),
            [PacketId.PasswordResponse] = typeof(PasswordResponse),
            [PacketId.ItemDisown] = typeof(ItemDisown),
            [PacketId.PlayerTownNpc] = typeof(PlayerTownNpc),
            [PacketId.PlayerAnimation] = typeof(PlayerAnimation),
            [PacketId.PlayerTeam] = typeof(PlayerTeam),
            [PacketId.SignRead] = typeof(SignRead),
            [PacketId.SignInfo] = typeof(SignInfo),
            [PacketId.TileLiquid] = typeof(TileLiquid),
            [PacketId.PlayerEnter] = typeof(PlayerEnter),
            [PacketId.PlayerBuffs] = typeof(PlayerBuffs),
            [PacketId.EntityEffect] = typeof(EntityEffect),
            [PacketId.ObjectUnlock] = typeof(ObjectUnlock),
            [PacketId.NpcAddBuff] = typeof(NpcAddBuff),
            [PacketId.NpcBuffs] = typeof(NpcBuffs),
            [PacketId.PlayerAddBuff] = typeof(PlayerAddBuff),
            [PacketId.NpcName] = typeof(NpcName),
            [PacketId.WorldBiomes] = typeof(WorldBiomes),
            [PacketId.PlayerMusic] = typeof(PlayerMusic),
            [PacketId.WireActivate] = typeof(WireActivate),
            [PacketId.NpcHome] = typeof(NpcHome),
            [PacketId.WorldSummon] = typeof(WorldSummon),
            [PacketId.PlayerDodge] = typeof(PlayerDodge),
            [PacketId.BlockPaint] = typeof(BlockPaint),
            [PacketId.WallPaint] = typeof(WallPaint),
            [PacketId.EntityTeleport] = typeof(EntityTeleport),
            [PacketId.PlayerHeal] = typeof(PlayerHeal),
            [PacketId.ClientUuid] = typeof(ClientUuid),
            [PacketId.ChestName] = typeof(ChestName),
            [PacketId.NpcCatch] = typeof(NpcCatch),
            [PacketId.NpcRelease] = typeof(NpcRelease),
            [PacketId.NpcMerchant] = typeof(NpcMerchant),
            [PacketId.PlayerTeleportItem] = typeof(PlayerTeleportItem),
            [PacketId.AnglerQuestInfo] = typeof(AnglerQuestInfo),
            [PacketId.AnglerQuestComplete] = typeof(AnglerQuestComplete),
            [PacketId.PlayerAnglerQuests] = typeof(PlayerAnglerQuests),
            [PacketId.TileAnimation] = typeof(TileAnimation),
            [PacketId.InvasionProgress] = typeof(InvasionProgress),
            [PacketId.ObjectPlace] = typeof(ObjectPlace),
            [PacketId.PlayerChest] = typeof(PlayerChest),
            [PacketId.CombatNumber] = typeof(CombatNumber),
            [PacketId.NpcIdKillCount] = typeof(NpcIdKillCount),
            [PacketId.PlayerStealth] = typeof(PlayerStealth),
            [PacketId.PlayerQuickStack] = typeof(PlayerQuickStack),
            [PacketId.TileEntityInfo] = typeof(TileEntityInfo),
            [PacketId.TileEntityPlace] = typeof(TileEntityPlace),
            [PacketId.ItemTweak] = typeof(ItemTweak),
            [PacketId.ItemFrameInfo] = typeof(ItemFrameInfo),
            [PacketId.InstancedItemInfo] = typeof(InstancedItemInfo),
            [PacketId.NpcEmote] = typeof(NpcEmote),
            [PacketId.NpcStealCoins] = typeof(NpcStealCoins),
            [PacketId.ProjectileRemoveIndex] = typeof(ProjectileRemoveIndex),
            [PacketId.PlayerPortal] = typeof(PlayerPortal),
            [PacketId.NpcIdKilled] = typeof(NpcIdKilled),
            [PacketId.EventOccurred] = typeof(EventOccurred),
            [PacketId.MinionPosition] = typeof(MinionPosition),
            [PacketId.NpcPortal] = typeof(NpcPortal),
            [PacketId.PillarShieldStrengths] = typeof(PillarShieldStrengths),
            [PacketId.PlayerNebulaBuff] = typeof(PlayerNebulaBuff),
            [PacketId.MoonLordInfo] = typeof(MoonLordInfo),
            [PacketId.NpcShopInventory] = typeof(NpcShopInventory),
            [PacketId.GemLockToggle] = typeof(GemLockToggle),
            [PacketId.PoofOfSmoke] = typeof(PoofOfSmoke),
            [PacketId.ServerMessage] = typeof(ServerMessage),
            [PacketId.ProjectileCannon] = typeof(ProjectileCannon),
            [PacketId.WireOperationsRequest] = typeof(WireOperationsRequest),
            [PacketId.WireOperationsResponse] = typeof(WireOperationsResponse),
            [PacketId.PartyToggle] = typeof(PartyToggle),
            [PacketId.OldOnesArmyStart] = typeof(OldOnesArmyStart),
            [PacketId.AmbientEffect] = typeof(AmbientEffect),
            [PacketId.OldOnesArmyEnd] = typeof(OldOnesArmyEnd),
            [PacketId.MinionTarget] = typeof(MinionTarget),
            [PacketId.OldOnesArmyInfo] = typeof(OldOnesArmyInfo),
            [PacketId.PlayerHurt] = typeof(PlayerHurt),
            [PacketId.PlayerKill] = typeof(PlayerKill),
            [PacketId.CombatText] = typeof(CombatText),
            [PacketId.PlayerEmoji] = typeof(PlayerEmoji),
            [PacketId.MannequinInventory] = typeof(MannequinInventory),
            [PacketId.TileEntityInteraction] = typeof(TileEntityInteraction),
            [PacketId.WeaponRackInfo] = typeof(WeaponRackInfo),
            [PacketId.HatRackInventory] = typeof(HatRackInventory),
            [PacketId.BlockBreaking] = typeof(BlockBreaking),
            [PacketId.NpcRevengeInfo] = typeof(NpcRevengeInfo),
            [PacketId.NpcRemoveRevenge] = typeof(NpcRemoveRevenge),
            [PacketId.GolfBall] = typeof(GolfBall),
            [PacketId.ServerConnected] = typeof(ServerConnected),
            [PacketId.NpcFish] = typeof(NpcFish),
            [PacketId.NpcImmunity] = typeof(NpcImmunity),
            [PacketId.ServerSound] = typeof(ServerSound),
            [PacketId.PlateInfo] = typeof(PlateInfo),
            [PacketId.PlayerLuck] = typeof(PlayerLuck),
            [PacketId.PlayerDead] = typeof(PlayerDead),
            [PacketId.NpcCavernMonsters] = typeof(NpcCavernMonsters),
            [PacketId.NpcRemoveBuff] = typeof(NpcRemoveBuff),
            [PacketId.PlayerHost] = typeof(PlayerHost),
            [PacketId.CreditsRoll] = typeof(CreditsRoll)
        };

        /// <summary>
        /// Gets the corresponding type for the packet ID.
        /// </summary>
        /// <param name="id">The packet ID.</param>
        /// <returns>The corresponding type for the packet ID.</returns>
        public static Type Type(this PacketId id) =>
            _types.TryGetValue(id, out var type) ? type : typeof(UnknownPacket);
    }
}
